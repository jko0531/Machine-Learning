function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta

h_x = sigmoid(X * theta);
error_ = (-y .* log(h_x) - (1 - y) .* log(1 - h_x));
theta_sum = 0;

for i = 2:size(theta)
	theta_sum = theta_sum + theta(i)^2;
end
J = (1/m) * sum([error_]) + (lambda/(2*m) * theta_sum);


error1_ = (h_x - y).*X(1);
grad(1) = (1/m) * sum([error1_]);

for i = 2: size(theta)
	error2_ = (h_x - y).*X(:,i);
	grad(i) = (1/m) * sum([error2_]) + (lambda/m)*theta(i);



% =============================================================

end
